(window.webpackJsonp=window.webpackJsonp||[]).push([[7],{77:function(e,n,t){"use strict";t.r(n),t.d(n,"frontMatter",(function(){return i})),t.d(n,"metadata",(function(){return o})),t.d(n,"toc",(function(){return c})),t.d(n,"default",(function(){return s}));var r=t(3),a=t(7),l=(t(0),t(89)),i={title:"Syntax"},o={unversionedId:"syntax",id:"syntax",isDocsHomePage:!1,title:"Syntax",description:"The syntax of Sparkle is C-ish.",source:"@site/docs/syntax.md",slug:"/syntax",permalink:"/sparkle/syntax",editUrl:"https://github.com/elimerl/sparkle/edit/master/docs/docs/syntax.md",version:"current",sidebar:"docs",previous:{title:"Getting Started",permalink:"/sparkle/"}},c=[{value:"Types",id:"types",children:[]},{value:"Arithmetic",id:"arithmetic",children:[]},{value:"Boolean logic",id:"boolean-logic",children:[]},{value:"Strings",id:"strings",children:[]},{value:"Variables",id:"variables",children:[]},{value:"Blocks",id:"blocks",children:[]},{value:"Functions",id:"functions",children:[]},{value:"Modules",id:"modules",children:[]}],b={toc:c};function s(e){var n=e.components,t=Object(a.a)(e,["components"]);return Object(l.b)("wrapper",Object(r.a)({},b,t,{components:n,mdxType:"MDXLayout"}),Object(l.b)("p",null,"The syntax of Sparkle is C-ish."),Object(l.b)("h2",{id:"types"},"Types"),Object(l.b)("p",null,"Booleans, ",Object(l.b)("abbr",{title:"UTF-16 strings"},"strings"),", ",Object(l.b)("abbr",{title:"Double precison numbers"},"numbers"),". (And functions!)"),Object(l.b)("pre",null,Object(l.b)("code",{parentName:"pre"},'var bool = true;\nvar str = "Hello, World!";\nvar num = 123456;\n')),Object(l.b)("h2",{id:"arithmetic"},"Arithmetic"),Object(l.b)("p",null,"Works as you expect."),Object(l.b)("pre",null,Object(l.b)("code",{parentName:"pre"},"print 100 / 10 * 10 / 10; // 10\n")),Object(l.b)("h2",{id:"boolean-logic"},"Boolean logic"),Object(l.b)("p",null,"Not is ",Object(l.b)("inlineCode",{parentName:"p"},"!"),". And is ",Object(l.b)("inlineCode",{parentName:"p"},"and")," and or is ",Object(l.b)("inlineCode",{parentName:"p"},"or"),"."),Object(l.b)("pre",null,Object(l.b)("code",{parentName:"pre"},"var a = true;\nvar b = true;\n\nprint a and b; // false\nprint a or b; // true\n")),Object(l.b)("h2",{id:"strings"},"Strings"),Object(l.b)("p",null,"You can concatenate them."),Object(l.b)("pre",null,Object(l.b)("code",{parentName:"pre"},'var a = "Hello, "\nvar b = "World!"\nprint a + b; // Hello, World!\n')),Object(l.b)("h2",{id:"variables"},"Variables"),Object(l.b)("p",null,"Declare 'em with ",Object(l.b)("inlineCode",{parentName:"p"},"var")," and mutate them with ",Object(l.b)("inlineCode",{parentName:"p"},"="),"."),Object(l.b)("pre",null,Object(l.b)("code",{parentName:"pre"},"var a = 3;\nvar b = 4;\n")),Object(l.b)("h2",{id:"blocks"},"Blocks"),Object(l.b)("p",null,"Stick something in a pair of brackets and everything inside will be scoped locally."),Object(l.b)("pre",null,Object(l.b)("code",{parentName:"pre"},'var a = "Moo";\n{\n  var a = "Cow";\n  print a; // Cow\n}\nprint a; // Moo\n')),Object(l.b)("h2",{id:"functions"},"Functions"),Object(l.b)("p",null,Object(l.b)("inlineCode",{parentName:"p"},"function")," and the name plus parameters work. If you call with the wrong number of parameters, it'll error."),Object(l.b)("pre",null,Object(l.b)("code",{parentName:"pre"},'function moo(thing) {\n  print "MOOOO AM " + thing;\n}\nmoo("COW");\n')),Object(l.b)("p",null,"You can pass 'em around, too! And use closures!"),Object(l.b)("pre",null,Object(l.b)("code",{parentName:"pre"},'function enclosing(msg) {\n  return function closure() {\n    print msg;\n  };\n}\nvar abc = enclosing("MOO")\nabc()\n')),Object(l.b)("h2",{id:"modules"},"Modules"),Object(l.b)("p",null,"Actually surprisingly simple!"),Object(l.b)("pre",null,Object(l.b)("code",{parentName:"pre",className:"language-plain",metastring:'title="mod.sparkle"',title:'"mod.sparkle"'},'function MOO() {\n  print("MOOAOOAOOAOAOAOOAO");\n}\nexport MOO;\n')),Object(l.b)("pre",null,Object(l.b)("code",{parentName:"pre",className:"language-plain",metastring:'title="main.sparkle"',title:'"main.sparkle"'},"from mod import MOO;\nMOO(); // MOOAOOAOOAOAOAOOAO\n")),Object(l.b)("p",null,"The modules will try to be resolved to the standard library, then if that fails it will load ",Object(l.b)("inlineCode",{parentName:"p"},".sparkle")," files in the same folder."))}s.isMDXComponent=!0}}]);